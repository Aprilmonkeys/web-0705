CSS:
 * 概念
   * Cascading Style Sheets，层叠样式表
   * 支持专有的文件 - 扩展名为".css"
   * 作用 - 将HTML的结构与样式进行分离
 * 如何使用CSS
   * 内联样式
     * 通过 HTML 元素的 style 属性实现
   * 外联样式
     * 在 <head> 元素定义 <style> 元素
       * 在 <style> 元素中编写 CSS 样式
     * 定义 CSS 的文件
       * 在 HTML 页面中引入 CSS 文件
   * 内联样式的优先级别高于外联样式
 * 块级元素与行内元素
   * 块级元素 - 独占页面中的一行(下一个块级元素在新的一行)
     * 已掌握的块级元素 - <h1>、<p>、<ul>和<table>等元素
       * 具有良好的语义化 - 具体的元素具有具体的含义
     * <div>元素 - 本身不具备任何的含义
       * 作用 - 实现页面的布局(类似于<table>表格元素)
   * 行内元素 - 不会独占一行(只占文本内容的区域)
     * 已掌握的行内元素 - <td>、<a>和<img>等元素
     * <span>元素 - 本身不具备任何的含义
     * 特点 - 当行内元素占满页面的整个宽度时，自动换行
 * CSS的选择器
   * 作用 - 定位 HTML 页面中的元素
   * 常见的选择器
     * ID选择器 - 通过 HTML 页面元素的 id 属性值进行定位
       * 语法结构 - #ID
     * 类(class)选择器 - 通过 HTML 页面元素的 class 属性值进行定位
       * 语法结构 - .class
     * 元素选择器 - 通过 HTML 页面元素的元素名进行定位
       * 语法结构 - 元素名
     * 属性选择器 - 通过 HTML 页面元素的属性进行定位
       * 语法结构 - [属性名]
     * 在实际开发中，更多使用的是 类选择器 和 元素选择器
     * 选择器的优先级 - 内联样式 -> ID选择器 -> 类选择器和属性选择器 -> 元素选择器
       * !important - 将当前选择器的优先级别设置最高(打乱优先级别的顺序)
         * 在实际开发中，不建议使用
   * 关系选择器
     * 后代选择器 - 根据目标元素匹配后代元素
       目标元素 后代元素
     * 子元素选择器 - 根据目标元素匹配子级元素
       目标元素>子元素
     * 相邻兄弟选择器 - 根据目标元素匹配下一个相邻兄弟元素
       目标元素+下一个相邻兄弟元素
     * 这里面的"目标元素"和"后代元素"、"子元素"和"下一个相邻兄弟元素" - 使用常见 4 种选择器
   * 组合选择器
     * 第一种 - 交集结果
       * 多个选择器并列使用，中间没有任何分隔
     * 第二种 - 并集结果
       * 多个选择器并列使用，中间使用","分隔
   * 通配符选择器（*）
     * 作用 - 匹配当前 HTML 页面中的所有元素
     * 问题 - 匹配的速度不是很快(页面元素的数量和复杂程度)
 * 设置颜色单位
   * 普通英文单词
     * 好处 - 简单，便捷
     * 问题 - 设置的颜色在不同浏览器中，可能显示的颜色出现差异
   * 三原色 - 红、绿、蓝
   * 颜色的八进制方式
     * 格式 - rgb(红色,绿色,蓝色)
     * 红色、绿色和蓝色 - 这三种颜色使用 数字 表示
       * 范围是 0 ~ 255
   * 颜色的十六进制方式
     * 格式 - #红色绿色蓝色
     * 红色、绿色和蓝色 - 这三种颜色使用 两位数字 表示
       * 范围 - 00 ~ FF
 * 伪类
   * 作用 - 为<a>元素添加样式
     * :link - 设置链接元素未访问的样式
     * :visited - 设置链接元素访问后的样式
     * :hover - 设置鼠标悬停链接元素的样式
     * :active - 设置鼠标选中链接元素的样式
     * text-decoration: none; - 去掉链接元素自带的下划线
   * <a>实现按钮的效果
 * WebStorm的快捷键
   * 代码格式化 - CTRL + SHIFT + F